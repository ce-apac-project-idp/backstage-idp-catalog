apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rds-deploy-template
  title: Deploy an Application with RDS Instance
  description: Demo RDS for GitOps deployment
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: Choose a Target Cloud Environment
      required:
        - targetEnv
      properties:
        targetEnv:
          title: Target Environment
          type: string
          enum: ["IBM Cloud", "AWS", "Azure", "GCP"]
    - title: Name your deployed environment
      required:
        - deploymentName
      properties:
        deploymentName:
          title: Deployent Name
          type: string
          description: Unique name of your deployment
          ui:autofocus: true
          ui:options:
            rows: 5
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
    - id: trigger_build
      name: Trigger Build Pipeline
      action: ibm:call-build-pipeline
      input:
        targetEnv:  ${{ parameters.targetEnv }}
        deploymentName:  ${{ parameters.deploymentName }}
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
